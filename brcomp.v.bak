module brcomp (
    input wire [31:0] rs1_data, // First operand (A)
    input wire [31:0] rs2_data, // Second operand (B)
    input wire br_unsigned, // 1 if the comparison is unsigned
    output reg br_less, // 1 if A < B
    output reg br_equal // 1 if A = B
);

always @(*) begin
    // Determine if A equals B
    br_equal = (rs1_data == rs2_data) ? 1 : 0;
    // Calculate difference between rs1_data and rs2_data
    reg [31:0] difference = rs1_data + (~rs2_data) + 1;
    // Determine if A is less than B
    if (br_unsigned) begin
        // Unsigned comparison: Check borrow flag
        br_less = (rs1_data[31] == 0 && rs2_data[31] == 1) ? 32'd1 :
                  (rs1_data[31] == 1 && rs1_data[31] == 0) ? 32'd0 : difference[31];
    end else begin
        // Signed comparison: Check sign bit of the difference
        br_less = difference[31];
    end
end
endmodule
